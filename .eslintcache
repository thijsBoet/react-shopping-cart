[{"D:\\projects\\react-shopping-cart\\src\\App.tsx":"1","D:\\projects\\react-shopping-cart\\src\\App.styles.ts":"2","D:\\projects\\react-shopping-cart\\src\\Item\\Item.styles.ts":"3","D:\\projects\\react-shopping-cart\\src\\Item\\Item.tsx":"4"},{"size":1864,"mtime":1611369928426,"results":"5","hashOfConfig":"6"},{"size":276,"mtime":1611369603327,"results":"7","hashOfConfig":"6"},{"size":509,"mtime":1611369277263,"results":"8","hashOfConfig":"6"},{"size":602,"mtime":1611368822904,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"12"},"1jegqrb",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\projects\\react-shopping-cart\\src\\App.tsx",["19","20"],"import { useState } from \"react\";\nimport { useQuery } from \"react-query\";\n\n// components\nimport Item from \"./Item/Item\"\nimport Drawer from \"@material-ui/core/Drawer\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport Grid from \"@material-ui/core/Grid\";\nimport AddShoppingCartIcon from \"@material-ui/icons/AddShoppingCart\";\nimport Badge from \"@material-ui/core/Badge\";\n\n// styles\nimport { Wrapper, StyledButton } from \"./App.styles\";\n\n// types\nexport type CartItemType = {\n  id: number;\n  category: string;\n  description: string;\n  image: string;\n  price: number;\n  title: string;\n  amount: number;\n};\n\nconst getProduct = async (): Promise<CartItemType[]> =>\n  await (await fetch(\"https://fakestoreapi.com/products\")).json();\n\nconst App = () => {\n  const [cartOpen, setCartOpen] = useState(false);\n  const [cartItems, setCarItems] = useState([] as CartItemType[])\n\n  const { data, isLoading, error } = useQuery<CartItemType[]>(\n    \"products\",\n    getProduct\n  );\n\n  const getTotalItems = (items:CartItemType[]) => null;\n\n  const handleAddToCart = (clickedItem: CartItemType) => null;\n\n  const handleRemoveFromCart = () => null;\n  \n  if (isLoading) return <LinearProgress />\n  if(error)return <div className=\"error\">Error</div>\n\n  return (\n    <Wrapper>\n      <Drawer anchor=\"right\" open={cartOpen} onClose={() => setCartOpen(false)}>\n        Cart Goes Here\n      </Drawer>\n      <StyledButton onClick={() => setCartOpen(true)}>\n        <Badge badgeContent={getTotalItems(cartItems)} color=\"error\">\n          <AddShoppingCartIcon />\n        </Badge>\n      </StyledButton>\n      <Grid container spacing={3}>\n        {data?.map((item) => (\n          <Grid item key={item.id} xs={12} sm={4}>\n            <Item item={item} handleAddToCart={handleAddToCart} />\n          </Grid>\n        ))}\n      </Grid>\n    </Wrapper>\n  );\n};\n\nexport default App;\n\n","D:\\projects\\react-shopping-cart\\src\\App.styles.ts",[],"D:\\projects\\react-shopping-cart\\src\\Item\\Item.styles.ts",[],"D:\\projects\\react-shopping-cart\\src\\Item\\Item.tsx",[],{"ruleId":"21","severity":1,"message":"22","line":31,"column":21,"nodeType":"23","messageId":"24","endLine":31,"endColumn":32},{"ruleId":"21","severity":1,"message":"25","line":42,"column":9,"nodeType":"23","messageId":"24","endLine":42,"endColumn":29},"@typescript-eslint/no-unused-vars","'setCarItems' is assigned a value but never used.","Identifier","unusedVar","'handleRemoveFromCart' is assigned a value but never used."]